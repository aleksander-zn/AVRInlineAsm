
e2example.elf:     file format elf32-avr
e2example.elf
architecture: avr:5, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000

Program Header:
    LOAD off    0x00000094 vaddr 0x00000000 paddr 0x00000000 align 2**1
         filesz 0x000000d6 memsz 0x000000d6 flags r-x
    LOAD off    0x0000016a vaddr 0x00800100 paddr 0x000000d6 align 2**0
         filesz 0x00000000 memsz 0x00000000 flags rw-
    LOAD off    0x0000016a vaddr 0x00810000 paddr 0x00810000 align 2**0
         filesz 0x00000003 memsz 0x00000003 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  000000d6  0000016a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000d6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .eeprom       00000003  00810000  00810000  0000016a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .stab         0000057c  00000000  00000000  00000170  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000d76  00000000  00000000  000006ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00001462  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001474  2**2
                  CONTENTS, READONLY
  7 .debug_info   000005f4  00000000  00000000  000014b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005a2  00000000  00000000  00001aa8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001d  00000000  00000000  0000204a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  00002067  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00800100 l    d  .data	00000000 .data
00000000 l    d  .text	00000000 .text
00810000 l    d  .eeprom	00000000 .eeprom
00000000 l    d  .stab	00000000 .stab
00000000 l    d  .stabstr	00000000 .stabstr
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .note.gnu.avr.deviceinfo	00000000 .note.gnu.avr.deviceinfo
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    df *ABS*	00000000 e2example.c
0000003e l       *ABS*	00000000 __SP_H__
0000003d l       *ABS*	00000000 __SP_L__
0000003f l       *ABS*	00000000 __SREG__
00000000 l       *ABS*	00000000 __tmp_reg__
00000001 l       *ABS*	00000000 __zero_reg__
00810000 l     O .eeprom	00000002 EEPROMu16.1656
00000000 l    df *ABS*	00000000 _exit.o
000000d4 l       .text	00000000 __stop_program
0000007c  w      .text	00000000 __vector_22
000000b8 g       .text	00000000 eeprom_write_r18
0000007c  w      .text	00000000 __vector_1
0000ffa0 g       *ABS*	00000000 __DATA_REGION_LENGTH__
000000ac g     F .text	0000000a eeprom_write_word
00000068 g       .text	00000000 __trampolines_start
000000d6 g       .text	00000000 _etext
0000007c  w      .text	00000000 __vector_24
0000007c  w      .text	00000000 __vector_12
0000007c g       .text	00000000 __bad_interrupt
000000d6 g       *ABS*	00000000 __data_load_end
0000007c  w      .text	00000000 __vector_6
00810002 g     O .eeprom	00000001 EEPROMu8
00000068 g       .text	00000000 __trampolines_end
0000007c  w      .text	00000000 __vector_3
0000007c  w      .text	00000000 __vector_23
000000d6 g       *ABS*	00000000 __data_load_start
00000068 g       .text	00000000 __dtors_end
00000400 g       *ABS*	00000000 __LOCK_REGION_LENGTH__
0000007c  w      .text	00000000 __vector_25
000000b6 g     F .text	0000001c eeprom_write_byte
0000007c  w      .text	00000000 __vector_11
00000068  w      .text	00000000 __init
0000007c  w      .text	00000000 __vector_13
0000007c  w      .text	00000000 __vector_17
0000007c  w      .text	00000000 __vector_19
0000007c  w      .text	00000000 __vector_7
00810003 g       .eeprom	00000000 __eeprom_end
00000000 g       .text	00000000 __vectors
0000009c g     F .text	00000010 eeprom_read_byte
00000000  w      .text	00000000 __vector_default
0000007c  w      .text	00000000 __vector_5
00000400 g       *ABS*	00000000 __SIGNATURE_REGION_LENGTH__
00000068 g       .text	00000000 __ctors_start
00000080 g     F .text	0000001c main
0000007c  w      .text	00000000 __vector_4
00000000  w      *ABS*	00000000 __heap_end
0000007c  w      .text	00000000 __vector_9
0000007c  w      .text	00000000 __vector_2
00000400 g       *ABS*	00000000 __USER_SIGNATURE_REGION_LENGTH__
0000007c  w      .text	00000000 __vector_21
0000007c  w      .text	00000000 __vector_15
00000068 g       .text	00000000 __dtors_start
00000068 g       .text	00000000 __ctors_end
000008ff  w      *ABS*	00000000 __stack
00800100 g       .data	00000000 _edata
00800100 g       .eeprom	00000000 _end
0000007c  w      .text	00000000 __vector_8
000000d2  w      .text	00000000 .hidden exit
00010000 g       *ABS*	00000000 __EEPROM_REGION_LENGTH__
000000d2 g       .text	00000000 .hidden _exit
0000007c  w      .text	00000000 __vector_14
0000007c  w      .text	00000000 __vector_10
0000007c  w      .text	00000000 __vector_16
0000007c  w      .text	00000000 __vector_18
00000400 g       *ABS*	00000000 __FUSE_REGION_LENGTH__
00020000 g       *ABS*	00000000 __TEXT_REGION_LENGTH__
0000007c  w      .text	00000000 __vector_20



Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 69 00 	jmp	0xd2	; 0xd2 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
  80:	82 e0       	ldi	r24, 0x02	; 2
  82:	90 e0       	ldi	r25, 0x00	; 0
  84:	0e 94 4e 00 	call	0x9c	; 0x9c <eeprom_read_byte>
  88:	8f 5f       	subi	r24, 0xFF	; 255
  8a:	68 2f       	mov	r22, r24
  8c:	70 e0       	ldi	r23, 0x00	; 0
  8e:	80 e0       	ldi	r24, 0x00	; 0
  90:	90 e0       	ldi	r25, 0x00	; 0
  92:	0e 94 56 00 	call	0xac	; 0xac <eeprom_write_word>
  96:	80 e0       	ldi	r24, 0x00	; 0
  98:	90 e0       	ldi	r25, 0x00	; 0
  9a:	08 95       	ret

0000009c <eeprom_read_byte>:
  9c:	f9 99       	sbic	0x1f, 1	; 31
  9e:	fe cf       	rjmp	.-4      	; 0x9c <eeprom_read_byte>
  a0:	92 bd       	out	0x22, r25	; 34
  a2:	81 bd       	out	0x21, r24	; 33
  a4:	f8 9a       	sbi	0x1f, 0	; 31
  a6:	99 27       	eor	r25, r25
  a8:	80 b5       	in	r24, 0x20	; 32
  aa:	08 95       	ret

000000ac <eeprom_write_word>:
  ac:	0e 94 5b 00 	call	0xb6	; 0xb6 <eeprom_write_byte>
  b0:	27 2f       	mov	r18, r23
  b2:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <eeprom_write_r18>

000000b6 <eeprom_write_byte>:
  b6:	26 2f       	mov	r18, r22

000000b8 <eeprom_write_r18>:
  b8:	f9 99       	sbic	0x1f, 1	; 31
  ba:	fe cf       	rjmp	.-4      	; 0xb8 <eeprom_write_r18>
  bc:	1f ba       	out	0x1f, r1	; 31
  be:	92 bd       	out	0x22, r25	; 34
  c0:	81 bd       	out	0x21, r24	; 33
  c2:	20 bd       	out	0x20, r18	; 32
  c4:	0f b6       	in	r0, 0x3f	; 63
  c6:	f8 94       	cli
  c8:	fa 9a       	sbi	0x1f, 2	; 31
  ca:	f9 9a       	sbi	0x1f, 1	; 31
  cc:	0f be       	out	0x3f, r0	; 63
  ce:	01 96       	adiw	r24, 0x01	; 1
  d0:	08 95       	ret

000000d2 <_exit>:
  d2:	f8 94       	cli

000000d4 <__stop_program>:
  d4:	ff cf       	rjmp	.-2      	; 0xd4 <__stop_program>

e2example.elf:     file format elf32-avr

Contents of section .eeprom:
 810000 0f0014                               ...             
